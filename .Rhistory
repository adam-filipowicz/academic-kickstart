sound_by_age +
scale_color_gradient2(midpoint = med_age,
low = "blue", mid = "white", high = "red")
sound_by_age +
scale_color_gradientn(colors = brewer.pal(n=5, name="PuBuGn"))
sound_by_age +
scale_color_gradientn(colors = rev(brewer.pal(n=5, name="PuBuGn")))
sound_by_age +
scale_color_viridis()
sound_by_age +
scale_color_viridis(option = "magma")
sound_by_age +
scale_color_viridis(option = "inferno", begin = 1, end = 0)
devtools::install_github("UrbanInstitute/urbnmapr")
library(urbnmapr)
incarceration <- read_csv("incarceration_trends.csv")
incarceration_county <- incarceration %>% filter(year == "2014") %>% select(fips, total_prison_pop_rate) %>% rename(county_fips = fips)
incarceration_county <- left_join(incarceration_county, counties, by = "county_fips")
incarceration_county %>%
filter(state_name == "Oregon") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_prison_pop_rate)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(colors = brewer.pal(n=5, name = "OrRd")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
labs(fill = "Rate", title = "Oregon Prison Incarceration Rate 2014", subtitle = "Per 100,00 residents age 15-64", caption = "Source: Vera Institute") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5, family = "Lato", face = "bold"),
plot.subtitle = element_text(color = "grey50", size = 8, hjust = 0.5, family = "Lato", face = "bold.italic"),
plot.caption = element_text(family = "Lato"),
legend.title = element_text(family = "Lato"))
cb_incarceration <- incarceration_county %>%
filter(state_name == "Oregon") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_prison_pop_rate)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(colors = brewer.pal(n=5, name = "OrRd")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
labs(fill = "Rate", title = "Oregon Prison Incarceration Rate 2014", subtitle = "Per 100,00 residents age 15-64", caption = "Source: Vera Institute") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(color = "grey50", size = 8, hjust = 0.5, face = "bold.italic"))
cvd_grid(cb_incarceration)
incarceration_county %>%
filter(state_name == "Oregon") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_prison_pop_rate)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(colors = brewer.pal(n = 5, name = "Greys"), na.value = "grey100") +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
labs(fill = "Rate", title = "Oregon Prison Incarceration Rate 2014", subtitle = "Per 100,00 residents age 15-64", caption = "Source: Vera Institute") +
annotate(x = -120.05, y = 44.78, geom = "text",
label = "No \ndata", family = "Lato") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5, family = "Lato", face = "bold"),
plot.subtitle = element_text(color = "grey50", size = 8, hjust = 0.5, family = "Lato", face = "bold.italic"),
plot.caption = element_text(family = "Lato"),
legend.title = element_text(family = "Lato"))
incarceration_county %>%
filter(state_name == "Oregon") %>%
ggplot(mapping = aes(long, lat, group = group, fill = total_prison_pop_rate)) +
geom_polygon(color = "#ffffff", size = .25) +
scale_fill_gradientn(colors = brewer.pal(n=5, name = "PuOr")) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
labs(fill = "Rate", title = "Oregon Prison Incarceration Rate 2014", subtitle = "Per 100,00 residents age 15-64", caption = "Source: Vera Institute") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5, family = "Lato", face = "bold"),
plot.subtitle = element_text(color = "grey50", size = 8, hjust = 0.5, family = "Lato", face = "bold.italic"),
plot.caption = element_text(family = "Lato"),
legend.title = element_text(family = "Lato"))
blogdown:::serve_site()
library(extrafont)
knitr::opts_chunk$set(error = TRUE, comment = NA, warnings = FALSE, errors = FALSE, messages = FALSE, tidy = FALSE, cache = TRUE)
library(extrafont)
blogdown:::serve_site()
blogdown:::serve_site()
knitr::opts_chunk$set(error = TRUE, comment = NA, warnings = FALSE, errors = FALSE, messages = FALSE, tidy = FALSE, cache = TRUE)
library(tidyverse)
library(extrafont)
library(here)
library(ggthemes)
library(extrafont)
hot.dogs <- read_csv(here::here("hot_dog_contest.csv"),
col_types = cols(
gender = col_factor(levels = NULL)
))
glimpse(hot.dogs)
hot.dogs
hot.dogs <- hot.dogs %>%
mutate(post_ifoce = year >= 1997) %>%
filter(year >= 1981 & gender == "male")
hot.dogs
ggplot(hot.dogs, aes(x = year, y = num_eaten)) +
geom_col()
ggplot(hot.dogs, aes(x=year, y = num_eaten)) +
geom_col() +
labs(x = "Year", y = "Hot Dogs and Buns Consumed") +
ggtitle("Nathan's Hot Dog Eating Contest Results, 1981-2017")
ggplot(hot.dogs, aes(x = year, y = num_eaten)) +
geom_col(color = "white") +
labs(x = "Year", y = "Hot Dogs and Buns Consumed") +
ggtitle("Nathan's Hot Dog Eating Contest Results, 1981-2017")
ggplot(hot.dogs, aes(x = year, y = num_eaten)) +
geom_col(color = "white", fill = "navyblue") +
labs(x = "Year", y = "Hot Dogs and Buns Consumed") +
ggtitle("Nathan's Hot Dog Eating Contest Results, 1981-2017")
ggplot(hot.dogs, aes(x = year, y = num_eaten)) +
geom_col(aes(fill = post_ifoce), color = "white") +
labs(x = "Year", y = "Hot Dogs and Buns Consumed") +
ggtitle("Nathan's Hot Dog Eating Contest Results, 1981-2017")
ggplot(hot.dogs, aes(x = year, y = num_eaten)) +
geom_col(aes(fill = post_ifoce), color = "white") +
labs(x = "Year", y = "Hot Dogs and Buns Consumed") +
ggtitle("Nathan's Hot Dog Eating Contest Results, 1981-2017") +
scale_fill_discrete(name = "",
labels=c("Pre-IFOCE", "Post-IFOCE"))
hdm.affil <- read_csv(here::here("hot_dog_contest_with_affiliation.csv"),
col_types = cols(
affiliated = col_factor(levels = NULL),
gender = col_factor(levels = NULL))) %>%
mutate(post_ifoce = year >= 1997) %>%
filter(year >= 1981 & gender == "male")
glimpse(hdm.affil)
hdm.affil %>%
distinct(affiliated)
hdm.affil %>%
count(affiliated, sort = TRUE)
ggplot(hdm.affil, aes(x = year, y = num_eaten)) +
geom_col(aes(fill = affiliated)) +
labs(x = "Year", y = "Hot Dogs and Buns Consumed") +
ggtitle("Nathan's Hot Dog Eating Contest Results, 1981-2017")
affil.plot <- ggplot(hdm.affil, aes(x = year, y = num_eaten)) +
geom_col(aes(fill = affiliated)) +
labs(x = "Year", y = "Hot Dogs and Buns Consumed") +
ggtitle("Nathan's Hot Dog Eating Contest Results, 1981-2017") +
scale_fill_manual(values = c('#E9602B','#2277A0','#CCB683'),
name = "IFOCE-affiliation")
affil.plot
affil.plot <- affil.plot +
scale_y_continuous(expand = c(0,0),
breaks = seq(0, 70, 10)) +
scale_x_continuous(expand = c(0,0))
affil.plot
affil.plot <- affil.plot +
coord_cartesian(xlim = c(1980, 2018), ylim = c(0, 80))
affil.plot
affil.plot +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text = element_text(size = 12)) +
theme(panel.background = element_blank()) +
theme(axis.line.x = element_line(color = "gray80", size =0.5)) +
theme(axis.ticks = element_line(color = "gray80", size =0.5))
hot_diggity <- theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 12),
panel.background = element_blank(),
axis.line.x = element_line(color = "gray80", size = 0.5),
axis.ticks = element_line(color = "gray80", size = 0.5),
text = element_text(family = "Lato") # need extrafont for this
)
affil.plot + hot_diggity
affil.plot + theme_fivethirtyeight(base_family = "Lato")
affil.plot + theme_tufte(base_family = "Palatino Linotype")
years_to_label <- seq(from = 1981, to = 2017, by =4)
years_to_label
hd.years <- hdm.affil %>%
distinct(year) %>%
mutate(year_lab = ifelse(year %in% years_to_label, year, ""))
affil.plot +
hot_diggity +
scale_x_continuous(expand = c(0,0),
breaks = hd.years$year,
labels = hd.years$year_lab)
nathan_plot <- ggplot(hdm.affil, aes(x = year, y = num_eaten)) +
geom_col(aes(fill = affiliated)) +
labs(x = "Year", y = "Hot Dogs and Buns Consumed") +
ggtitle("Nathan's Hot Dog Eating Contest Results, 1981-2017") +
scale_fill_manual(values = c('#E9602B','#2277A0','#CCB683'),
name = "IFOCE-affiliation") +
hot_diggity +
scale_y_continuous(expand = c(0, 0),
breaks = seq(0, 70, 10)) +
scale_x_continuous(expand = c(0, 0),
breaks = hd.years$year,
labels = hd.years$year_lab) +
coord_cartesian(xlim = c(1980, 2018), ylim = c(0, 80))
nathan_plot
nathan_ann <- nathan_plot +
guides(fill = FALSE) +
coord_cartesian(xlim = c(1980, 2019), ylim = c(0, 85)) +
annotate('segment', x=1980.75, xend=2000.25, y= 30, yend=30, size=0.5, color="#CCB683")+
annotate('segment', x=1980.75, xend=1980.75, y= 30, yend=28, size=0.5, color="#CCB683") +
annotate('segment', x=2000.25, xend=2000.25, y= 30, yend=28, size=0.5, color="#CCB683") +
annotate('segment', x=1990, xend=1990, y= 33, yend=30, size=0.5, color="#CCB683")
nathan_ann
nathan_ann <- nathan_ann +
annotate('text', x=1990, y=36, label="No MLE/IFOCE Affiliation", color="#CCB683", family="Lato", hjust=0.5, size = 3) +
annotate('segment', x=2000.75, xend=2006.25, y= 58, yend=58, size=0.5, color="#2277A0") +
annotate('segment', x=2000.75, xend=2000.75, y= 58, yend=56, size=0.5, color="#2277A0") +
annotate('segment', x=2006.25, xend=2006.25, y= 58, yend=56, size=0.5, color="#2277A0") +
annotate('segment', x=2003.5, xend=2003.5, y= 61, yend=58, size=0.5, color="#2277A0") +
annotate('text', x=2003.5, y=65, label="MLE/IFOCE\nFormer Member", color="#2277A0", family="Lato", hjust=0.5, size = 3) +
annotate('segment', x=2006.75, xend=2017.25, y= 76, yend=76, size=0.5, color="#E9602B") +
annotate('segment', x=2006.75, xend=2006.75, y= 76, yend=74, size=0.5, color="#E9602B") +
annotate('segment', x=2017.25, xend=2017.25, y= 76, yend=74, size=0.5, color="#E9602B") +
annotate('segment', x=2012, xend=2012, y= 79, yend=76, size=0.5, color="#E9602B") +
annotate('text', x=2012, y=82, label="MLE/IFOCE Current Member", color="#E9602B", family="Lato", hjust=0.5, size = 3)
nathan_ann
hdm_females <- read_csv(here::here("hot_dog_contest_with_affiliation.csv"),
col_types = cols(
affiliated = col_factor(levels = NULL),
gender = col_factor(levels = NULL)
)) %>%
mutate(post_ifoce = year >= 1997) %>%
filter(year >= 1981 & gender == "female")
glimpse(hdm_females)
nathan_w_females <- nathan_ann +
# add in the female data, and manually set a fill color
geom_col(data = hdm_females,
width = 0.75,
fill = "#F68A39")
nathan_w_females
caption <- paste(strwrap("* From 2011 on, separate Men's and Women's prizes have been awarded. All female champions to date have been MLE/IFOCE-affiliated.", 70), collapse="\n")
nathan_w_females +
# now an asterisk to set off the female scores, and a caption
annotate('text', x = 2018.5, y = 39, label="*", family = "Lato", size = 8) +
labs(caption = caption) +
theme(plot.caption = element_text(family = "Lato", size=8, hjust=0, margin=margin(t=15)))
blogdown:::serve_site()
knitr::opts_chunk$set(echo = TRUE)
library(extrafont)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(here)
library(tidyverse)
library(ggthemes)
library(extrafont)
library(dplyr)
moma <- read_csv(here::here("artworks-cleaned.csv"))
moma
glimpse(moma)
moma %>%
select(artist, title, year_acquired) %>%
arrange(year_acquired)
moma %>%
select(artist, title, year_created) %>%
arrange(year_created)
moma %>%
distinct(artist)
moma %>%
count(artist, sort = TRUE)
moma %>%
count(artist_gender)
moma %>%
count(artist_gender, artist) %>%
count(artist_gender)
moma %>%
count(year_acquired, sort = TRUE)
moma %>%
count(year_created, sort = TRUE)
moma %>%
filter (num_artists == 1 & n_female_artists == 1) %>%
select(title, artist, year_acquired, year_created) %>%
arrange(year_acquired)
ggplot(moma, aes(year_created, year_acquired)) +
geom_point(alpha = .1, na.rm = TRUE) +
geom_abline(intercept = c(0,0), colour = "red") +
labs(x = "Year Painted", y = "Year Acquired") +
ggtitle("MoMA Keeps Its Collection Current")
moma_solo <- moma %>%
filter(num_artists == 1)
ggplot(moma_solo, aes(year_created, year_acquired)) +
geom_point(alpha = .1) +
geom_abline(intercept = c(0,0), colour = "red") +
labs(x = "Year Painted", y = "Year Acquired") +
ggtitle("MoMA Keeps Its Collection Current") +
facet_wrap(~artist_gender)
moma_dim <- moma %>%
filter(height_cm < 600, width_cm < 760) %>%
mutate(hw_ratio = height_cm / width_cm,
hw_cat = case_when(
hw_ratio > 1 ~ "taller than wide",
hw_ratio < 1 ~ "wider than tall",
hw_ratio == 1 ~ "perfect square"
))
library(ggthemes)
ggplot(moma_dim, aes(x = width_cm, y = height_cm, colour = hw_cat)) +
geom_point(alpha = .5) +
ggtitle("MoMA Paintings, Tall and Wide") +
scale_colour_manual(name = "",
values = c("gray50", "#FF9900", "#B14CF0")) +
theme_fivethirtyeight() +
theme(axis.title = element_text()) +
labs(x = "Width", y = "Height")
library(ggthemes)
ggplot(moma_dim, aes(x = width_cm, y = height_cm, colour = hw_cat)) +
geom_point(alpha = .5) +
ggtitle("MoMA Paintings, Tall and Wide") +
scale_colour_manual(name = "",
values = c("gray50", "#ee5863", "#6999cd")) +
theme_fivethirtyeight() +
theme(axis.title = element_text()) +
labs(x = "Width", y = "Height")
library(ggthemes)
ggplot(moma_dim, aes(x = width_cm, y = height_cm, colour = hw_cat)) +
geom_point(alpha = .5, show.legend = FALSE) +
ggtitle("MoMA Paintings, Tall and Wide") +
scale_colour_manual(name = "",
values = c("gray50", "#ee5863", "#6999cd")) +
theme_fivethirtyeight() +
theme(axis.title = element_text()) +
labs(x = "Width", y = "Height") +
annotate(x = 200, y = 380, geom = "text",
label = "Taller than\nWide", color = "#ee5863",
size = 5, family = "Lato", hjust = 1, fontface = 2) +
annotate(x = 375, y = 100, geom = "text",
label = "Wider than\nTall", color = "#6999cd",
size = 5, family = "Lato", hjust = 0, fontface = 2)
library(forcats)
moma_solo_relevel <- moma_solo %>%
mutate(artist_gender = fct_relevel(artist_gender, "Male", "Female"))
mu <- moma_solo_relevel %>%
group_by(artist_gender) %>%
summarize(grp.mean=mean(year_acquired, na.rm = TRUE))
head(mu)
ggplot(moma_solo_relevel, aes(x=year_acquired, fill=artist_gender, color=artist_gender)) +
geom_bar(alpha = 0.7, position = "stack", show.legend = FALSE) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=artist_gender),
linetype="dashed", show.legend = FALSE) +
theme_fivethirtyeight() +
scale_colour_manual(values = c("#63ACBE", "#EE442F")) +
scale_fill_manual(values = c("#63ACBE", "#EE442F")) +
theme(axis.title = element_text()) +
labs(x = "Year Acquired", y = "Count") +
ggtitle("Gender Distribution of the MoMA Collection") +
annotate(x = 1973, y = 75, geom = "text",
label = "Average->\nMales    ", color = "#63ACBE",
size = 5, family = "Lato", hjust = 1, fontface = 3) +
annotate(x = 1989, y = 75, geom = "text",
label = "<-Average\n    Females", color = "#EE442F",
size = 5, family = "Lato", hjust = 0, fontface = 3)
ggplot(moma_solo_relevel, aes(x=year_acquired, color=artist_gender, fill=artist_gender)) +
geom_density(alpha = 0.7, show.legend = FALSE) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=artist_gender),
linetype="dashed", show.legend = FALSE) +
theme_fivethirtyeight() +
scale_colour_manual(values = c("#63ACBE", "#EE442F")) +
scale_fill_manual(values = c("#63ACBE", "#EE442F")) +
theme(axis.title = element_text()) +
labs(x = "Year Acquired", y = "Density") +
ggtitle("Gender Distribution of the MoMA Collection") +
annotate(x = 1973, y = .02, geom = "text",
label = "Average->\nMales    ", color = "#63ACBE",
size = 5, family = "Lato", hjust = 1, fontface = 3) +
annotate(x = 1989, y = .02, geom = "text",
label = "<-Average\n    Females", color = "#EE442F",
size = 5, family = "Lato", hjust = 0, fontface = 3)
ggplot(moma, aes(year_acquired, year_acquired-year_created)) +
geom_point(alpha = .1, na.rm = TRUE) +
geom_smooth(se=FALSE, color = "#EE442F") +
theme_tufte() +
labs(x = "Year Acquired", y = "Age (years) at time of acquisition") +
ggtitle("MoMA Keeps Things Fresh")
blogdown:::serve_site()
knitr::opts_chunk$set(error = TRUE, comment = NA, warnings = FALSE, errors = FALSE, messages = FALSE, tidy = FALSE, cache = TRUE)
library(tidyverse)
library(here)
library(ggthemes)
library(extrafont)
hot.dogs <- read_csv(here::here("hot_dog_contest.csv"),
col_types = cols(
gender = col_factor(levels = NULL)
))
glimpse(hot.dogs)
hot.dogs
hot.dogs <- hot.dogs %>%
mutate(post_ifoce = year >= 1997) %>%
filter(year >= 1981 & gender == "male")
hot.dogs
ggplot(hot.dogs, aes(x = year, y = num_eaten)) +
geom_col()
ggplot(hot.dogs, aes(x=year, y = num_eaten)) +
geom_col() +
labs(x = "Year", y = "Hot Dogs and Buns Consumed") +
ggtitle("Nathan's Hot Dog Eating Contest Results, 1981-2017")
ggplot(hot.dogs, aes(x = year, y = num_eaten)) +
geom_col(color = "white") +
labs(x = "Year", y = "Hot Dogs and Buns Consumed") +
ggtitle("Nathan's Hot Dog Eating Contest Results, 1981-2017")
ggplot(hot.dogs, aes(x = year, y = num_eaten)) +
geom_col(color = "white", fill = "navyblue") +
labs(x = "Year", y = "Hot Dogs and Buns Consumed") +
ggtitle("Nathan's Hot Dog Eating Contest Results, 1981-2017")
ggplot(hot.dogs, aes(x = year, y = num_eaten)) +
geom_col(aes(fill = post_ifoce), color = "white") +
labs(x = "Year", y = "Hot Dogs and Buns Consumed") +
ggtitle("Nathan's Hot Dog Eating Contest Results, 1981-2017")
ggplot(hot.dogs, aes(x = year, y = num_eaten)) +
geom_col(aes(fill = post_ifoce), color = "white") +
labs(x = "Year", y = "Hot Dogs and Buns Consumed") +
ggtitle("Nathan's Hot Dog Eating Contest Results, 1981-2017") +
scale_fill_discrete(name = "",
labels=c("Pre-IFOCE", "Post-IFOCE"))
hdm.affil <- read_csv(here::here("hot_dog_contest_with_affiliation.csv"),
col_types = cols(
affiliated = col_factor(levels = NULL),
gender = col_factor(levels = NULL))) %>%
mutate(post_ifoce = year >= 1997) %>%
filter(year >= 1981 & gender == "male")
glimpse(hdm.affil)
hdm.affil %>%
distinct(affiliated)
hdm.affil %>%
count(affiliated, sort = TRUE)
ggplot(hdm.affil, aes(x = year, y = num_eaten)) +
geom_col(aes(fill = affiliated)) +
labs(x = "Year", y = "Hot Dogs and Buns Consumed") +
ggtitle("Nathan's Hot Dog Eating Contest Results, 1981-2017")
affil.plot <- ggplot(hdm.affil, aes(x = year, y = num_eaten)) +
geom_col(aes(fill = affiliated)) +
labs(x = "Year", y = "Hot Dogs and Buns Consumed") +
ggtitle("Nathan's Hot Dog Eating Contest Results, 1981-2017") +
scale_fill_manual(values = c('#E9602B','#2277A0','#CCB683'),
name = "IFOCE-affiliation")
affil.plot
affil.plot <- affil.plot +
scale_y_continuous(expand = c(0,0),
breaks = seq(0, 70, 10)) +
scale_x_continuous(expand = c(0,0))
affil.plot
affil.plot <- affil.plot +
coord_cartesian(xlim = c(1980, 2018), ylim = c(0, 80))
affil.plot
affil.plot +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text = element_text(size = 12)) +
theme(panel.background = element_blank()) +
theme(axis.line.x = element_line(color = "gray80", size =0.5)) +
theme(axis.ticks = element_line(color = "gray80", size =0.5))
hot_diggity <- theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 12),
panel.background = element_blank(),
axis.line.x = element_line(color = "gray80", size = 0.5),
axis.ticks = element_line(color = "gray80", size = 0.5),
text = element_text(family = "Lato") # need extrafont for this
)
affil.plot + hot_diggity
affil.plot + theme_fivethirtyeight(base_family = "Lato")
affil.plot + theme_tufte(base_family = "Palatino Linotype")
years_to_label <- seq(from = 1981, to = 2017, by =4)
years_to_label
hd.years <- hdm.affil %>%
distinct(year) %>%
mutate(year_lab = ifelse(year %in% years_to_label, year, ""))
affil.plot +
hot_diggity +
scale_x_continuous(expand = c(0,0),
breaks = hd.years$year,
labels = hd.years$year_lab)
nathan_plot <- ggplot(hdm.affil, aes(x = year, y = num_eaten)) +
geom_col(aes(fill = affiliated)) +
labs(x = "Year", y = "Hot Dogs and Buns Consumed") +
ggtitle("Nathan's Hot Dog Eating Contest Results, 1981-2017") +
scale_fill_manual(values = c('#E9602B','#2277A0','#CCB683'),
name = "IFOCE-affiliation") +
hot_diggity +
scale_y_continuous(expand = c(0, 0),
breaks = seq(0, 70, 10)) +
scale_x_continuous(expand = c(0, 0),
breaks = hd.years$year,
labels = hd.years$year_lab) +
coord_cartesian(xlim = c(1980, 2018), ylim = c(0, 80))
nathan_plot
nathan_ann <- nathan_plot +
guides(fill = FALSE) +
coord_cartesian(xlim = c(1980, 2019), ylim = c(0, 85)) +
annotate('segment', x=1980.75, xend=2000.25, y= 30, yend=30, size=0.5, color="#CCB683")+
annotate('segment', x=1980.75, xend=1980.75, y= 30, yend=28, size=0.5, color="#CCB683") +
annotate('segment', x=2000.25, xend=2000.25, y= 30, yend=28, size=0.5, color="#CCB683") +
annotate('segment', x=1990, xend=1990, y= 33, yend=30, size=0.5, color="#CCB683")
nathan_ann
nathan_ann <- nathan_ann +
annotate('text', x=1990, y=36, label="No MLE/IFOCE Affiliation", color="#CCB683", family="Lato", hjust=0.5, size = 3) +
annotate('segment', x=2000.75, xend=2006.25, y= 58, yend=58, size=0.5, color="#2277A0") +
annotate('segment', x=2000.75, xend=2000.75, y= 58, yend=56, size=0.5, color="#2277A0") +
annotate('segment', x=2006.25, xend=2006.25, y= 58, yend=56, size=0.5, color="#2277A0") +
annotate('segment', x=2003.5, xend=2003.5, y= 61, yend=58, size=0.5, color="#2277A0") +
annotate('text', x=2003.5, y=65, label="MLE/IFOCE\nFormer Member", color="#2277A0", family="Lato", hjust=0.5, size = 3) +
annotate('segment', x=2006.75, xend=2017.25, y= 76, yend=76, size=0.5, color="#E9602B") +
annotate('segment', x=2006.75, xend=2006.75, y= 76, yend=74, size=0.5, color="#E9602B") +
annotate('segment', x=2017.25, xend=2017.25, y= 76, yend=74, size=0.5, color="#E9602B") +
annotate('segment', x=2012, xend=2012, y= 79, yend=76, size=0.5, color="#E9602B") +
annotate('text', x=2012, y=82, label="MLE/IFOCE Current Member", color="#E9602B", family="Lato", hjust=0.5, size = 3)
nathan_ann
hdm_females <- read_csv(here::here("hot_dog_contest_with_affiliation.csv"),
col_types = cols(
affiliated = col_factor(levels = NULL),
gender = col_factor(levels = NULL)
)) %>%
mutate(post_ifoce = year >= 1997) %>%
filter(year >= 1981 & gender == "female")
glimpse(hdm_females)
nathan_w_females <- nathan_ann +
# add in the female data, and manually set a fill color
geom_col(data = hdm_females,
width = 0.75,
fill = "#F68A39")
nathan_w_females
caption <- paste(strwrap("* From 2011 on, separate Men's and Women's prizes have been awarded. All female champions to date have been MLE/IFOCE-affiliated.", 70), collapse="\n")
nathan_w_females +
# now an asterisk to set off the female scores, and a caption
annotate('text', x = 2018.5, y = 39, label="*", family = "Lato", size = 8) +
labs(caption = caption) +
theme(plot.caption = element_text(family = "Lato", size=8, hjust=0, margin=margin(t=15)))
blogdown:::serve_site()
blogdown:::serve_site()
